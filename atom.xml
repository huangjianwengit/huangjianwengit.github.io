<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jivan&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-24T10:35:02.700Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CALayer强大的子类（一）</title>
    <link href="http://yoursite.com/2018/12/24/CALayer%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%AD%90%E7%B1%BB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/12/24/CALayer强大的子类（一）/</id>
    <published>2018-12-24T08:32:10.000Z</published>
    <updated>2018-12-24T10:35:02.700Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CALayer"><a href="#CALayer" class="headerlink" title="CALayer"></a>CALayer</h2><p>​    对于大多数开发者老说，CALayer是很熟悉的一个类，但是对于它的属性和应用可能一知半解，简单说明了CALayer的几个重要属性的作用以及是否支持隐式动画。下表是其属性：</p><p><img src="http://thyrsi.com/t6/640/1545640896x2890203049.png" alt=""></p><p>​    但是今天主要是介绍CALayer的子类，CALayer的子类很多，功能也大不相同，各司其职，使用好其子类对于我们日常开发有很大的的帮助。下图是CALayer与UIView及其子类的关系图：</p><p><img src="http://thyrsi.com/t6/640/1545642579x2890202498.png" alt=""></p><h3 id="CAShapeLayer"><a href="#CAShapeLayer" class="headerlink" title="CAShapeLayer"></a>CAShapeLayer</h3><ul><li><p>path  和贝塞尔曲线紧密连接一个入口</p></li><li><p>fillColor 和 fillRule fillColor即layer的path的填充颜色，fillRule属性用于指定使用哪一种算法去判断画布上的某区域是否属于该图形“内部” （内部区域将被填充）。</p></li><li><p>path  和贝塞尔曲线紧密连接一个入口</p></li><li><p>fillColor 和 fillRule fillColor即layer的path的填充颜色，fillRule属性用于指定使用哪一种算法去判断画布上的某区域是否属于该图形“内部” （内部区域将被填充）。</p></li><li><p>strokeColor 线颜色</p></li><li><p>strokeStart strokeEnd 两者的取值都是0～1，决定贝塞尔曲线的划线百分比，对应值的改变支持隐式动画。</p></li><li><p>lineWidth 线宽</p></li><li><p>miterLimit 最大斜接长度，</p></li><li><p>ineCap 线端点类型，</p></li><li><p>lineJoin 连接点类型，</p></li><li><p>lineDashPattern 虚线设置，为一个数组，数组中奇数位实线长度，偶数位带遍空白长度（注意：这里的奇数，偶数以数组的第一个元素索引为1计算）</p></li><li><p>lineDashPhase 虚线开始的位置，可以使用此属性做一个滚动的虚线框。strokeColor 线颜色</p></li><li><p>strokeStart strokeEnd 两者的取值都是0～1，决定贝塞尔曲线的划线百分比，对应值的改变支持隐式动画。</p></li><li><p>lineWidth 线宽</p></li><li><p>miterLimit 最大斜接长度，</p></li><li><p>lineCap 线端点类型，</p></li><li><p>lineJoin 连接点类型，</p></li><li><p>ineDashPattern 虚线设置，为一个数组，数组中奇数位实线长度，偶数位带遍空白长度（注意：这里的奇数，偶数以数组的第一个元素索引为1计算）</p></li><li><p>lineDashPhase 虚线开始的位置，可以使用此属性做一个滚动的虚线框。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">    CAShapeLayer* dashLineShapeLayer = [CAShapeLayer layer];</span><br><span class="line">    //创建贝塞尔曲线</span><br><span class="line">    UIBezierPath* dashLinePath = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, 200, 100) cornerRadius:20];</span><br><span class="line">    </span><br><span class="line">    dashLineShapeLayer.path = dashLinePath.CGPath;</span><br><span class="line">    dashLineShapeLayer.position = CGPointMake(100, 100);</span><br><span class="line">    dashLineShapeLayer.fillColor = [UIColor clearColor].CGColor;</span><br><span class="line">    dashLineShapeLayer.strokeColor = [UIColor blueColor].CGColor;</span><br><span class="line">    dashLineShapeLayer.lineWidth = 3;</span><br><span class="line">    dashLineShapeLayer.lineDashPattern = @[@(6),@(6)];</span><br><span class="line">    dashLineShapeLayer.strokeStart = 0;</span><br><span class="line">    dashLineShapeLayer.strokeEnd = 1;</span><br><span class="line">    dashLineShapeLayer.zPosition = 999;</span><br><span class="line">    //</span><br><span class="line">    [self.view.layer addSublayer:dashLineShapeLayer];</span><br><span class="line">    </span><br><span class="line">    //</span><br><span class="line">    NSTimeInterval delayTime = 0.3f;</span><br><span class="line">    //定时器间隔时间</span><br><span class="line">    NSTimeInterval timeInterval = 0.1f;</span><br><span class="line">    //创建子线程队列</span><br><span class="line">    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);</span><br><span class="line">    //使用之前创建的队列来创建计时器</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);</span><br><span class="line">    //设置延时执行时间，delayTime为要延时的秒数</span><br><span class="line">    dispatch_time_t startDelayTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayTime * NSEC_PER_SEC));</span><br><span class="line">    //设置计时器</span><br><span class="line">    dispatch_source_set_timer(_timer, startDelayTime, timeInterval * NSEC_PER_SEC, 0.1 * NSEC_PER_SEC);</span><br><span class="line">//</span><br><span class="line">    dispatch_source_set_event_handler(_timer, ^&#123;</span><br><span class="line">        //执行事件</span><br><span class="line">        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">         </span><br><span class="line">            CGFloat _add = 3;</span><br><span class="line">            dashLineShapeLayer.lineDashPhase -= _add;</span><br><span class="line">            NSLog(@&quot;%f&quot;,_add);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    // 启动计时器</span><br><span class="line">    dispatch_resume(_timer);</span><br></pre></td></tr></table></figure><p>实现效果如下：</p><p><img src="http://thyrsi.com/t6/640/1545643670x2890202707.gif" alt=""></p><h3 id="CAGradientLayer"><a href="#CAGradientLayer" class="headerlink" title="CAGradientLayer"></a>CAGradientLayer</h3><p>​    子类<strong><em>CAGradientLayer</em></strong>，我们一般使用它生成平滑的颜色过渡。</p><ul><li><p>colors 颜色</p></li><li><p>locations 位置</p></li><li><p>startPoint 变色范围的起始点</p></li><li><p>endPoint 变色范围的结束点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">CAGradientLayer *gradientLayer = [CAGradientLayer layer];</span><br><span class="line">   gradientLayer.bounds = CGRectMake(0, 0, 220, 220);</span><br><span class="line">   gradientLayer.position = self.view.center;</span><br><span class="line">   [self.view.layer addSublayer:gradientLayer];</span><br><span class="line">   //</span><br><span class="line">   NSMutableArray *colorArray = [NSMutableArray new];</span><br><span class="line">   for (NSInteger hue = 0; hue &lt;= 360; hue += 5) &#123;</span><br><span class="line">       UIColor *color = [UIColor colorWithHue:1.0*hue/360.0</span><br><span class="line">                                   saturation:1.0</span><br><span class="line">                                   brightness:1.0</span><br><span class="line">                                        alpha:1.0];</span><br><span class="line">       [colorArray addObject:(id)color.CGColor];</span><br><span class="line">   &#125;</span><br><span class="line">   //</span><br><span class="line">   gradientLayer.colors = colorArray;</span><br><span class="line">   //gradientLayer.locations = @[@(0.3),@(0.7)];</span><br><span class="line">   //</span><br><span class="line">   gradientLayer.startPoint = CGPointMake(0, 0);</span><br><span class="line">   gradientLayer.endPoint = CGPointMake(1, 1);</span><br><span class="line">   //ShapeLayer</span><br><span class="line">   UIBezierPath *bezierP = [UIBezierPath bezierPathWithOvalInRect:CGRectMake(10, 10, 200, 200)];</span><br><span class="line">   CAShapeLayer* shapeLayer = [[CAShapeLayer alloc] init];</span><br><span class="line">   shapeLayer.path = bezierP.CGPath;</span><br><span class="line">   shapeLayer.lineWidth = 10;</span><br><span class="line">   shapeLayer.fillColor = [UIColor clearColor].CGColor;</span><br><span class="line">   shapeLayer.strokeColor = [UIColor blueColor].CGColor;</span><br><span class="line">   shapeLayer.lineCap = kCALineCapRound;</span><br><span class="line">   shapeLayer.strokeStart = 0;</span><br><span class="line">   shapeLayer.strokeEnd = 0;</span><br><span class="line">   gradientLayer.mask = shapeLayer;</span><br><span class="line">   </span><br><span class="line">   //</span><br><span class="line">   NSTimeInterval delayTime = 1.0f;</span><br><span class="line">   NSTimeInterval timeInterval = 0.2f;</span><br><span class="line">   dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);</span><br><span class="line">   _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);</span><br><span class="line">   dispatch_time_t startDelayTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayTime * NSEC_PER_SEC));</span><br><span class="line">   dispatch_source_set_timer(_timer, startDelayTime, timeInterval * NSEC_PER_SEC, 0.1 * NSEC_PER_SEC);</span><br><span class="line">   dispatch_source_set_event_handler(_timer, ^&#123;</span><br><span class="line">       dispatch_async(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">         </span><br><span class="line">           if (shapeLayer.strokeEnd &lt; 1)&#123;</span><br><span class="line">               </span><br><span class="line">               shapeLayer.strokeEnd += 0.1;</span><br><span class="line">               </span><br><span class="line">           &#125;else&#123;</span><br><span class="line">               dispatch_source_cancel(self-&gt;_timer);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">   dispatch_resume(_timer);</span><br></pre></td></tr></table></figure><p>实现效果如下：</p><p><img src="http://thyrsi.com/t6/640/1545645709x2890203049.gif" alt=""></p></li></ul><h3 id="CAEmitterLayer"><a href="#CAEmitterLayer" class="headerlink" title="CAEmitterLayer"></a>CAEmitterLayer</h3><p> CAEmitterLayer 属性介绍：</p><ul><li><p>birthRate:粒子产生系数，默认1.0；</p></li><li><p>emitterCells: 装着CAEmitterCell对象的数组，被用于把粒子投放到layer上；</p></li><li><p>emitterDepth:决定粒子形状的深度联系：emittershape</p></li></ul><ul><li><p>emitterMode:发射模式</p><p>NSString * const kCAEmitterLayerPoints;</p><p>NSString * const kCAEmitterLayerOutline;</p><p>NSString * const kCAEmitterLayerSurface;</p><p>NSString * const kCAEmitterLayerVolume;</p></li></ul><ul><li>emitterPosition:发射位置</li></ul><ul><li><p>emitterShape:发射源的形状：</p><p>NSString * const kCAEmitterLayerPoint;</p><p>NSString * const kCAEmitterLayerLine;</p><p>NSString * const kCAEmitterLayerRectangle;</p><p>NSString * const kCAEmitterLayerCuboid;</p><p>NSString * const kCAEmitterLayerCircle;</p><p>NSString * const kCAEmitterLayerSphere;</p></li></ul><ul><li><p>emitterSize:发射源的尺寸大；</p></li><li><p>emitterZposition:发射源的z坐标位置；</p></li><li><p>lifetime:粒子生命周期</p></li><li><p>preservesDepth:不是多很清楚（粒子是平展在层上）</p></li></ul><ul><li><p>renderMode:渲染模式：</p><p>NSString * const kCAEmitterLayerUnordered;</p><p>NSString * const kCAEmitterLayerOldestFirst;</p><p>NSString * const kCAEmitterLayerOldestLast;</p><p>NSString * const kCAEmitterLayerBackToFront;</p><p>NSString * const kCAEmitterLayerAdditive;</p></li></ul><ul><li><p>scale:粒子的缩放比例：</p></li><li><p>seed：用于初始化随机数产生的种子</p></li><li><p>spin:自旋转速度</p></li><li><p>velocity：粒子速度</p></li></ul><h4 id="CAEmitterCell-属性介绍"><a href="#CAEmitterCell-属性介绍" class="headerlink" title="CAEmitterCell 属性介绍"></a>CAEmitterCell 属性介绍</h4><p>​    CAEmitterCell类代表从CAEmitterLayer射出的粒子；emitter ce</p><ul><li>alphaRange:  一个粒子的颜色alpha能改变的范围；</li><li>alphaSpeed:粒子透明度在生命周期内的改变速度；</li><li>birthrate：粒子参数的速度乘数因子；每秒发射的粒子数量</li><li>blueRange：一个粒子的颜色blue 能改变的范围；</li><li>blueSpeed: 粒子blue在生命周期内的改变速度；</li><li>color:粒子的颜色</li><li>contents：是个CGImageRef的对象,既粒子要展现的图片；</li><li>contentsRect：应该画在contents里的子rectangle：</li><li>emissionLatitude：发射的z轴方向的角度</li><li>emissionLongitude:x-y平面的发射方向</li><li>emissionRange；周围发射角度</li><li>emitterCells：粒子发射的粒子</li><li>enabled：粒子是否被渲染</li><li>greenrange: 一个粒子的颜色green 能改变的范围；</li><li>greenSpeed: 粒子green在生命周期内的改变速度；</li><li>lifetime：生命周期</li><li>lifetimeRange：生命周期范围      lifetime= lifetime(+/-)</li><li>magnificationFilter：不是很清楚好像增加自己的大小</li><li>minificatonFilter：减小自己的大小</li><li>minificationFilterBias：减小大小的因子</li><li>name：粒子的名字</li><li>redRange：一个粒子的颜色red 能改变的范围；</li><li>redSpeed; 粒子red在生命周期内的改变速度；</li><li>scale：缩放比例：</li><li>scaleRange：缩放比例范围；</li><li>scaleSpeed：缩放比例速度：</li><li>spin：子旋转角度</li><li>spinrange：子旋转角度范围</li><li>style：不是很清楚：</li><li>velocity：速度</li><li>velocityRange：速度范围</li><li>xAcceleration:粒子x方向的加速度分量</li><li>yAcceleration:粒子y方向的加速度分量</li><li>zAcceleration:粒子z方向的加速度分量</li><li>emitterCells:粒子发射的粒子</li></ul><p><strong>注意</strong>：粒子同样有emitterCells属性，也就是说粒子同样可以发射粒子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">CAEmitterLayer *addEmitterLayer(UIView *window)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    //色块粒子</span><br><span class="line">    CAEmitterCell *subCell1 = subCell(imageWithColor(EmitterColor_Red));</span><br><span class="line">    subCell1.name = @&quot;red&quot;;</span><br><span class="line">    CAEmitterCell *subCell2 = subCell(imageWithColor(EmitterColor_Yellow));</span><br><span class="line">    subCell2.name = @&quot;yellow&quot;;</span><br><span class="line">    CAEmitterCell *subCell3 = subCell(imageWithColor(EmitterColor_Blue));</span><br><span class="line">    subCell3.name = @&quot;blue&quot;;</span><br><span class="line">    CAEmitterCell *subCell4 = subCell([UIImage imageNamed:@&quot;success_star&quot;]);</span><br><span class="line">    subCell4.name = @&quot;star&quot;;</span><br><span class="line">    </span><br><span class="line">    CAEmitterLayer *emitterLayer = [CAEmitterLayer layer];</span><br><span class="line">    emitterLayer.emitterPosition = window.center;</span><br><span class="line">    emitterLayer.emitterPosition = window.center;</span><br><span class="line">    emitterLayer.emitterSize    = window.bounds.size;</span><br><span class="line">    emitterLayer.emitterMode    = kCAEmitterLayerOutline;</span><br><span class="line">    emitterLayer.emitterShape    = kCAEmitterLayerRectangle;</span><br><span class="line">    emitterLayer.renderMode        = kCAEmitterLayerOldestFirst;</span><br><span class="line">    </span><br><span class="line">    emitterLayer.emitterCells = @[subCell1,subCell2,subCell3,subCell4];</span><br><span class="line">    [window.layer addSublayer:emitterLayer];</span><br><span class="line">    </span><br><span class="line">    return emitterLayer;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void startAnimate(CAEmitterLayer *emitterLayer)</span><br><span class="line">&#123;</span><br><span class="line">    CABasicAnimation *redBurst = [CABasicAnimation animationWithKeyPath:@&quot;emitterCells.red.birthRate&quot;];</span><br><span class="line">    redBurst.fromValue        = [NSNumber numberWithFloat:30];</span><br><span class="line">    redBurst.toValue            = [NSNumber numberWithFloat:  0.0];</span><br><span class="line">    redBurst.duration        = 0.5;</span><br><span class="line">    redBurst.timingFunction    = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    </span><br><span class="line">    CABasicAnimation *yellowBurst = [CABasicAnimation animationWithKeyPath:@&quot;emitterCells.yellow.birthRate&quot;];</span><br><span class="line">    yellowBurst.fromValue        = [NSNumber numberWithFloat:30];</span><br><span class="line">    yellowBurst.toValue            = [NSNumber numberWithFloat:  0.0];</span><br><span class="line">    yellowBurst.duration        = 0.5;</span><br><span class="line">    yellowBurst.timingFunction    = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    </span><br><span class="line">    CABasicAnimation *blueBurst = [CABasicAnimation animationWithKeyPath:@&quot;emitterCells.blue.birthRate&quot;];</span><br><span class="line">    blueBurst.fromValue        = [NSNumber numberWithFloat:30];</span><br><span class="line">    blueBurst.toValue            = [NSNumber numberWithFloat:  0.0];</span><br><span class="line">    blueBurst.duration        = 0.5;</span><br><span class="line">    blueBurst.timingFunction    = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    </span><br><span class="line">    CABasicAnimation *starBurst = [CABasicAnimation animationWithKeyPath:@&quot;emitterCells.star.birthRate&quot;];</span><br><span class="line">    starBurst.fromValue        = [NSNumber numberWithFloat:30];</span><br><span class="line">    starBurst.toValue            = [NSNumber numberWithFloat:  0.0];</span><br><span class="line">    starBurst.duration        = 0.5;</span><br><span class="line">    starBurst.timingFunction    = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    </span><br><span class="line">    CAAnimationGroup *group = [CAAnimationGroup animation];</span><br><span class="line">    group.animations = @[redBurst,yellowBurst,blueBurst,starBurst];</span><br><span class="line">    </span><br><span class="line">    [emitterLayer addAnimation:group forKey:@&quot;heartsBurst&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CAEmitterCell *subCell(UIImage *image)</span><br><span class="line">&#123;</span><br><span class="line">    CAEmitterCell * cell = [CAEmitterCell emitterCell];</span><br><span class="line">    </span><br><span class="line">    cell.name = @&quot;heart&quot;;</span><br><span class="line">    cell.contents = (__bridge id _Nullable)image.CGImage;</span><br><span class="line">    </span><br><span class="line">    // 缩放比例</span><br><span class="line">    cell.scale      = 0.6;</span><br><span class="line">    cell.scaleRange = 0.6;</span><br><span class="line">    // 每秒产生的数量</span><br><span class="line">    //    cell.birthRate  = 40;</span><br><span class="line">    cell.lifetime   = 20;</span><br><span class="line">    // 每秒变透明的速度</span><br><span class="line">    //    snowCell.alphaSpeed = -0.7;</span><br><span class="line">    //    snowCell.redSpeed = 0.1;</span><br><span class="line">    // 秒速</span><br><span class="line">    cell.velocity      = 200;</span><br><span class="line">    cell.velocityRange = 200;</span><br><span class="line">    cell.yAcceleration = 9.8;</span><br><span class="line">    cell.xAcceleration = 0;</span><br><span class="line">    //掉落的角度范围</span><br><span class="line">    cell.emissionRange  = M_PI;</span><br><span class="line">    </span><br><span class="line">    cell.scaleSpeed        = -0.05;</span><br><span class="line">    ////    cell.alphaSpeed        = -0.3;</span><br><span class="line">    cell.spin            = 2 * M_PI;</span><br><span class="line">    cell.spinRange        = 2 * M_PI;</span><br><span class="line">    </span><br><span class="line">    return cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UIImage *imageWithColor(UIColor *color)</span><br><span class="line">&#123;</span><br><span class="line">    CGRect rect = CGRectMake(0, 0, 13, 17);</span><br><span class="line">    UIGraphicsBeginImageContext(rect.size);</span><br><span class="line">    CGContextRef context = UIGraphicsGetCurrentContext();</span><br><span class="line">    CGContextSetFillColorWithColor(context, [color CGColor]);</span><br><span class="line">    CGContextFillRect(context, rect);</span><br><span class="line">    </span><br><span class="line">    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">    UIGraphicsEndImageContext();</span><br><span class="line">    return image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    实现效果如下：</p><p><img src="http://thyrsi.com/t6/640/1545647432x2890202977.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CALayer&quot;&gt;&lt;a href=&quot;#CALayer&quot; class=&quot;headerlink&quot; title=&quot;CALayer&quot;&gt;&lt;/a&gt;CALayer&lt;/h2&gt;&lt;p&gt;​    对于大多数开发者老说，CALayer是很熟悉的一个类，但是对于它的属性和应用可能一知半解，
      
    
    </summary>
    
      <category term="Objective-C" scheme="http://yoursite.com/categories/Objective-C/"/>
    
    
      <category term="CALayer" scheme="http://yoursite.com/tags/CALayer/"/>
    
  </entry>
  
  <entry>
    <title>数组越界问题</title>
    <link href="http://yoursite.com/2018/12/04/%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/12/04/数组越界问题/</id>
    <published>2018-12-04T13:34:09.000Z</published>
    <updated>2018-12-04T14:27:19.839Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​    在iOS开发中有时会遇到数组越界的问题，从而导致程序崩溃。所谓的数组越界,就是假如你的下标总数现在为32个,然后你在下一秒又执行了一个方法要从50个数据里惊醒赋值啊 筛选之类的 而你此时数量为32 ，50的数据还没有请求到 往往会出现数组越界的崩溃信息 大概是这样的<code>-[__NSArrayI objectAtIndex:]: index 100 beyond bounds [0 .. 9]&#39;</code> 具体的解决方式我们通常会选择把数组做个判断列如 return nil。为了防止程序崩溃，我们就要对数组越界进行处理。首先你可能会想到创建一个分类写上一个扩展方法，类似于这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-(id)jh_objectAtIndex:(NSUInteger)index&#123;</span><br><span class="line">    </span><br><span class="line">    if (index &lt; self.count) &#123;</span><br><span class="line">        </span><br><span class="line">        return [self objectAtIndex:index];</span><br><span class="line">        </span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这样的再取数组内的对象时调用<code>jh_objectAtIndex:</code>方法就解决了数组下标越界导致程序奔溃的问题，但是这样在项目有多个人开发的时候你写的扩展别人可能不知道啊，只有你自己知道调用这个方法可以防止程序奔溃，这不优雅啊。但是这是个小问题，不可能难住我们程序猿啊。</p><p>​    之前提到过Swizzling （黑魔法）这样的神器，虽然它是一把双刃剑，但是我们应该勇敢的使用这把锋利的剑，谨慎地使用它能极大的提高我们的效率。Swizzling  核心在于<code>method_exchangeImplementations</code>这个方法，这里我们可以创建<strong><em>NSObject (SwizzleMethod)</em></strong>分类封装一下Swizzling 方便之后的使用：</p><ul><li><strong>import “NSObject+SwizzleMethod.h”</strong> 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@interface NSObject (SwizzleMethod)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  对系统方法进行替换(交换实例方法)</span><br><span class="line"> *</span><br><span class="line"> *  @param systemSelector 被替换的方法</span><br><span class="line"> *  @param swizzledSelector 实际使用的方法</span><br><span class="line"> *  @param error            替换过程中出现的错误消息</span><br><span class="line"> *</span><br><span class="line"> *  @return 是否替换成功</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)SystemSelector:(SEL)systemSelector swizzledSelector:(SEL)swizzledSelector error:(NSError *)error;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li><p><strong>import “NSObject+SwizzleMethod.m”</strong>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;NSObject+SwizzleMethod.h&quot;</span><br><span class="line">#import &lt;objc/runtime.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation NSObject (SwizzleMethod)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  对系统方法进行替换</span><br><span class="line"> *</span><br><span class="line"> *  @param systemSelector 被替换的方法</span><br><span class="line"> *  @param swizzledSelector 实际使用的方法</span><br><span class="line"> *  @param error            替换过程中出现的错误消息</span><br><span class="line"> *</span><br><span class="line"> *  @return 是否替换成功</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)SystemSelector:(SEL)systemSelector swizzledSelector:(SEL)swizzledSelector error:(NSError *)error&#123;</span><br><span class="line">    </span><br><span class="line">    Method systemMethod = class_getInstanceMethod(self, systemSelector);</span><br><span class="line">    if (!systemMethod) &#123;</span><br><span class="line">        return [[self class] unrecognizedSelector:systemSelector error:error];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Method swizzledMethod = class_getInstanceMethod(self, swizzledSelector);</span><br><span class="line">    if (!swizzledMethod) &#123;</span><br><span class="line">        </span><br><span class="line">        return [[self class] unrecognizedSelector:swizzledSelector error:error];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (class_addMethod([self class], systemSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))) &#123;</span><br><span class="line"></span><br><span class="line">        class_replaceMethod([self class], swizzledSelector, method_getImplementation(systemMethod), method_getTypeEncoding(systemMethod));</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        method_exchangeImplementations(systemMethod, swizzledMethod);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (BOOL)unrecognizedSelector:(SEL)selector error:(NSError *)error&#123;</span><br><span class="line">    </span><br><span class="line">    NSString *errorString = [NSString stringWithFormat:@&quot;%@类没有找到%@&quot;, NSStringFromClass([self class]), NSStringFromSelector(selector)];</span><br><span class="line">    </span><br><span class="line">    error = [NSError errorWithDomain:@&quot;NSCocoaErrorDomain&quot; code:-1 userInfo:@&#123;NSLocalizedDescriptionKey:errorString&#125;];</span><br><span class="line">    </span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="NSArray"><a href="#NSArray" class="headerlink" title="NSArray"></a>NSArray</h2><ul><li><strong>#import “NSArray+ErrorHandle.h”</strong>文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface NSArray (ErrorHandle)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 为数组分类添加的方法  可以在应用中直接调用 可以防止数组越界导致的crash</span><br><span class="line"></span><br><span class="line"> @param index 传入的取值下标</span><br><span class="line"> @return id类型的数据</span><br><span class="line"> */</span><br><span class="line">- (id)objectAtIndexVerify:(NSUInteger)index;</span><br><span class="line">- (id)objectAtIndexedSubscriptVerify:(NSUInteger)idx;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li><strong>#import “NSArray+ErrorHandle.h”</strong>文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;NSArray+ErrorHandle.h&quot;</span><br><span class="line">#import &lt;objc/runtime.h&gt;</span><br><span class="line">#import &quot;NSObject+SwizzleMethod.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation NSArray (ErrorHandle)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  防止数组越界</span><br><span class="line"> */</span><br><span class="line">- (id)objectAtIndexVerify:(NSUInteger)index&#123;</span><br><span class="line">    if (index &lt; self.count) &#123;</span><br><span class="line">        return [self objectAtIndex:index];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> *  防止数组越界</span><br><span class="line"> */</span><br><span class="line">- (id)objectAtIndexedSubscriptVerify:(NSUInteger)idx&#123;</span><br><span class="line">    if (idx &lt; self.count) &#123;</span><br><span class="line">        return [self objectAtIndexedSubscript:idx];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+(void)load&#123;</span><br><span class="line">    [super load];</span><br><span class="line">    //无论怎样 都要保证方法只交换一次</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        //交换NSArray中的objectAtIndex方法</span><br><span class="line">        [objc_getClass(&quot;__NSArrayI&quot;) SystemSelector:@selector(objectAtIndex:) swizzledSelector:@selector(sxy_objectAtIndex:) error:nil];</span><br><span class="line">        //交换NSArray中的objectAtIndexedSubscript方法</span><br><span class="line">        [objc_getClass(&quot;__NSArrayI&quot;) SystemSelector:@selector(objectAtIndexedSubscript:) swizzledSelector:@selector(sxy_objectAtIndexedSubscript:) error:nil];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)sxy_objectAtIndexedSubscript:(NSUInteger)idx&#123;</span><br><span class="line">    if (idx &lt; self.count) &#123;</span><br><span class="line">        return [self sxy_objectAtIndexedSubscript:idx];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        NSLog(@&quot; 你的 NSArray数组已经越界了 但是已经帮你处理好了  %ld   count=%ld&quot;, idx, self.count);</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)sxy_objectAtIndex:(NSUInteger)index&#123;</span><br><span class="line">    if (index &lt; self.count) &#123;</span><br><span class="line">        return [self sxy_objectAtIndex:index];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        NSLog(@&quot; 你的 NSArray数组已经越界了 但是已经帮你处理好了  %ld   count=%ld&quot;, index, self.count);</span><br><span class="line">        </span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>这样我们直接使用系统的<code>objectAtIndex:</code>方法例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> self.datasource = [NSMutableArray array];</span><br><span class="line"> self.datasource = [NSMutableArray arrayWithObject:@[@&quot;1&quot;]];</span><br><span class="line">[self.datasource objectAtIndex:4]</span><br><span class="line"></span><br><span class="line">控制台会输出：</span><br><span class="line">    2018-12-04 22:12:47.622751+0800 hh[2884:65056]  你的NSMutableArray数组已经越界 帮你处理好了4   count=1   __NSArrayM</span><br><span class="line">2018-12-04 22:12:47.622921+0800 hh[2884:65056] (null)</span><br></pre></td></tr></table></figure><h2 id="NSMutableArray"><a href="#NSMutableArray" class="headerlink" title="NSMutableArray"></a>NSMutableArray</h2><ul><li><strong>#import “NSMutableArray+ErrorHandle.h”</strong>文件</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface NSMutableArray (ErrorHandle)</span><br><span class="line">/**</span><br><span class="line"> 数组中插入数据</span><br><span class="line"></span><br><span class="line"> @param object 数据</span><br><span class="line"> @param index 下标</span><br><span class="line"> */</span><br><span class="line">- (void)insertObjectVerify:(id)object atIndex:(NSInteger)index;</span><br><span class="line">/**</span><br><span class="line"> 数组中添加数据</span><br><span class="line"></span><br><span class="line"> @param object 数据</span><br><span class="line"> */</span><br><span class="line">- (void)addObjectVerify:(id)object;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><ul><li><p><strong>import “NSMutableArray+ErrorHandle.m”</strong>文件</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;NSMutableArray+ErrorHandle.h&quot;</span><br><span class="line">#import &quot;NSObject+SwizzleMethod.h&quot;</span><br><span class="line">#import &lt;objc/runtime.h&gt;</span><br><span class="line"></span><br><span class="line">@implementation NSMutableArray (ErrorHandle)</span><br><span class="line">/**</span><br><span class="line"> *  数组中插入数据</span><br><span class="line"> */</span><br><span class="line">- (void)insertObjectVerify:(id)object atIndex:(NSInteger)index&#123;</span><br><span class="line">    </span><br><span class="line">    if (index &lt; self.count &amp;&amp; object) &#123;</span><br><span class="line">        [self insertObject:object atIndex:index];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> *  数组中添加数据</span><br><span class="line"> */</span><br><span class="line">- (void)addObjectVerify:(id)object&#123;</span><br><span class="line">    if (object) &#123;</span><br><span class="line">        [self addObject:object];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+(void)load&#123;</span><br><span class="line">    [super load];</span><br><span class="line">    //无论怎样 都要保证方法只交换一次</span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123;</span><br><span class="line">        //交换NSMutableArray中的方法</span><br><span class="line">        [objc_getClass(&quot;__NSArrayM&quot;) SystemSelector:@selector(objectAtIndex:) swizzledSelector:@selector(jh_objectAtIndex:) error:nil];</span><br><span class="line">        //交换NSMutableArray中的方法</span><br><span class="line">        [objc_getClass(&quot;__NSArrayM&quot;) SystemSelector:@selector(objectAtIndexedSubscript:) swizzledSelector:@selector(jh_objectAtIndexedSubscript:) error:nil];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)jh_objectAtIndex:(NSUInteger)index&#123;</span><br><span class="line">    if (index &lt; self.count) &#123;</span><br><span class="line">        return [self jh_objectAtIndex:index];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        </span><br><span class="line">        NSLog(@&quot; 你的NSMutableArray数组已经越界 帮你处理好了%ld   count=%ld   %@&quot;, index, self.count, [self class]);</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">- (id)jh_objectAtIndexedSubscript:(NSUInteger)index&#123;</span><br><span class="line">    if (index &lt; self.count) &#123;</span><br><span class="line"></span><br><span class="line">        return [self jh_objectAtIndexedSubscript:index];</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        NSLog(@&quot; 你的NSMutableArray数组已经越界 帮你处理好了%ld   count=%ld   %@&quot;, index, self.count, [self class]);</span><br><span class="line">        return nil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>​    我们还是使用系统的<code>objectAtIndex:</code>方法就可以解决可变数组的越界问题，和你一个项目的小伙伴不知道这个也没问题了。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​    在iOS开发中有时会遇到数组越界的问题，从而导致程序崩溃。所谓的数组越界,就是假如你的下标总数现在为32个,然后你在下一秒又执行了
      
    
    </summary>
    
      <category term="Objective-C" scheme="http://yoursite.com/categories/Objective-C/"/>
    
    
      <category term="数组" scheme="http://yoursite.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>OC与JS交互浅谈</title>
    <link href="http://yoursite.com/2018/11/21/OC%E4%B8%8EJS%E4%BA%A4%E4%BA%92%E6%B5%85%E8%B0%88/"/>
    <id>http://yoursite.com/2018/11/21/OC与JS交互浅谈/</id>
    <published>2018-11-21T08:18:55.000Z</published>
    <updated>2018-12-04T14:27:44.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​    苹果端的程序开发审核是困扰开发人员的一大问题，不知多少iOS程序员与苹果爸爸做斗智斗勇，期望自己提交的应用能够一秒上线，当然这是不可能的奢望。虽然近两年苹果已经加速了审核速度，较之以前动则一两个星期的速度，可以说是大大提速了，但是相比较安卓端在审核速度上还是有所差距。为了解决这个问题APP内难免就会有一些web网页，这样在推出新的活动啥的，后台直接更新用户就可以看见啦，不必重新提交新的应用，节省了大量时间，关键是不用看苹果的脸色。</p><p>​    在工作历程中，有一次遇到这样一个状况：需要在一个web页面中实现分享的功能，web端的妹子是个刚毕业的新手，短时间无法实现这个功能，活动又要赶时间推出，没办法产品经理直接把这个皮球提给我们APP端了（谁让人家是妹子呢，妹子这种动物在程序员界那是大熊猫一样级别的国宝，不得好好照顾嘛）。最后折中采取了在web页面点击按钮，通过JS调用我们APP端的分享来实现这个活动的分享。</p><pre><code>我使用了`JSExport`协议：凡是添加了`JSExpor`t协议的类或者协议，所规定的方法，变量等 就会对js开放，我们可以通过js调用到。首先创建OC类：</code></pre><h2 id="添加协议"><a href="#添加协议" class="headerlink" title="添加协议"></a>添加协议</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line">#import &lt;JavaScriptCore/JavaScriptCore.h&gt;</span><br><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">@protocol JSBridgeObjectProtocol &lt;JSExport&gt;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 圣诞活动H5调用APP分享</span><br><span class="line"> @param url 分享Url</span><br><span class="line"> @param shareContent 分享内容</span><br><span class="line"> */</span><br><span class="line">- (void)callOCShareWithShareUrl:(NSString *)url ShareContent:(NSString *)shareContent;</span><br><span class="line"></span><br><span class="line">- (void)callCommonOCShareWithShareUrl:(NSString *)url ShareContent:(NSString *)jsonString;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@interface JSBridgeObject : NSObject&lt;JSBridgeObjectProtocol&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>​     </p><h2 id="实现协议"><a href="#实现协议" class="headerlink" title="实现协议"></a>实现协议</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;JSBridgeObject.h&quot;</span><br><span class="line">//分享</span><br><span class="line">#import &quot;YXShareActivityModel.h&quot;</span><br><span class="line">#import &quot;UMShareUIManager.h&quot;</span><br><span class="line">#import &lt;UMSocialCore/UMSocialCore.h&gt;</span><br><span class="line">#import &lt;UShareUI/UShareUI.h&gt;</span><br><span class="line"></span><br><span class="line">@interface JSBridgeObject  ()</span><br><span class="line"></span><br><span class="line">@property (nonatomic, strong) YXShareActivityModel *shareModel;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation JSBridgeObject</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">活动JS调用的方法(JS调用写法和OC不一样</span><br><span class="line">    无参方法</span><br><span class="line"> TestJSobject.TestNOParameter();</span><br><span class="line"> 有一个参数的方法</span><br><span class="line"> TestJSobject.TestOneParameter(TestJSobject.name);</span><br><span class="line">  有两个参数的方法          </span><br><span class="line">TestJSobject.TestTwoParameterSecondParameter(TestJSobject.name,TestJSobject.age);</span><br><span class="line">**/</span><br><span class="line">    </span><br><span class="line">    //实现协议方法</span><br><span class="line">- (void)callOCShareWithShareUrl:(NSString *)url ShareContent:(NSString *)shareContent</span><br><span class="line">&#123;</span><br><span class="line">  //这里处理web要求帮忙做的事情</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)callCommonOCShareWithShareUrl:(NSString *)url ShareContent:(NSString *)jsonString</span><br><span class="line">&#123;</span><br><span class="line">  //这里处理web要求帮忙做的事情</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)shareToOtherPlatformUrl:(NSString *)url ShareContent:(YXShareActivityModel *)shareModel</span><br><span class="line">&#123;</span><br><span class="line">  //这里处理web要求帮忙做的事情</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h2 id="在合适的时机将我们的对象提供给web"><a href="#在合适的时机将我们的对象提供给web" class="headerlink" title="在合适的时机将我们的对象提供给web"></a>在合适的时机将我们的对象提供给web</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//获取到页面的title</span><br><span class="line">- (void)webViewDidFinishLoad:(UIWebView *)webView&#123;</span><br><span class="line">    </span><br><span class="line">    if (!self.title ||</span><br><span class="line">        self.title.length == 0) &#123;</span><br><span class="line">        self.title = [webView stringByEvaluatingJavaScriptFromString:@&quot;document.title&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    JSContext *context = [webView valueForKeyPath:@&quot;documentView.webView.mainFrame.javaScriptContext&quot;];</span><br><span class="line">   </span><br><span class="line">    self.bridgeObject  = [JSBridgeObject new];</span><br><span class="line">    context[@&quot;JSBridgeObject&quot;] = self.bridgeObject;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>​    好了到这里已经完美的接过了上面产品经理踢过来的皮球，展现了我大iOS开发人员的魅力，哈哈。。自我臭美中！互帮互助齐力完成任务，最后大家一起happy才是最美的事吗，在帮助别人的时候也是在帮助自己，工作中学习才是最快速的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​    苹果端的程序开发审核是困扰开发人员的一大问题，不知多少iOS程序员与苹果爸爸做斗智斗勇，期望自己提交的应用能够一秒上线，当然这是不
      
    
    </summary>
    
      <category term="Objective-C" scheme="http://yoursite.com/categories/Objective-C/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Swizzling[Objective-C]</title>
    <link href="http://yoursite.com/2018/11/21/Swizzling-Objective-C/"/>
    <id>http://yoursite.com/2018/11/21/Swizzling-Objective-C/</id>
    <published>2018-11-21T07:13:24.000Z</published>
    <updated>2018-11-21T07:52:29.333Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​    前面的文章我已经介绍了Swift中的<strong>Swizzling Method</strong>，虽然swift语言有很多优点，但是毕竟是一门刚出来的语言，还处于发展过程中，苹果爹每年一次的大更新可折磨着一大堆苹果开发者。对于一般讲究效率和稳定的公司依旧青睐于Objective-C，毕竟大多数开发者还是比较熟悉的，节约了大多数学习和维护成本。</p><p>​    额。。。貌似扯得有点多，进入今天的正题吧，在OC中我们不必像swift中那样需要先解决方法的调用问题，API直接提供了两个方法<strong><em>+load（）</em></strong>和<strong><em>+initialize（）</em></strong>。OC本身就是运行时语言，不想swift静态性语言，虽然也能使用runtime，但是只是为了兼容OC，毕竟同一家公司不可能对自己家的东西不认可，那不是打自己脸。（又扯远了，手动尴尬-_-!）</p><p><code>+load()</code>: app启动的时候会加载所有的类,此时就会调用每个类的load方法。<br><code>+initialize()</code>: 第一次初始化这个类的时候会被调用。</p><p>​    今天依旧解决 <strong>字体适配</strong> 问题，这里我使用<code>+load()</code>: 方法，在这里替换我想要修改的方法，首先创建一个<strong>UIButton+myFont</strong>扩展文件，在<strong>UIButton+myFont.m</strong>文件中写上如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;UIButton+myFont.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation UIButton (myFont)</span><br><span class="line">    </span><br><span class="line">+ (void)load&#123;</span><br><span class="line"></span><br><span class="line">    Method imp = class_getInstanceMethod([self class], @selector(initWithCoder:));</span><br><span class="line"></span><br><span class="line">    Method myImp = class_getInstanceMethod([self class], @selector(myInitWithCoder:));</span><br><span class="line">    //用自定义的方法替换系统原始的方法</span><br><span class="line">    method_exchangeImplementations(imp, myImp);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    Method iwf = class_getInstanceMethod([self class], @selector(initWithFrame:));</span><br><span class="line"></span><br><span class="line">    Method myIwf = class_getInstanceMethod([self class], @selector(myInitWithFrame:));</span><br><span class="line"></span><br><span class="line">    method_exchangeImplementations(iwf, myIwf);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//这里是为了Xib创建的控件也能有自适应字体大小的效果</span><br><span class="line">- (id)myInitWithCoder:(NSCoder*)aDecode&#123;</span><br><span class="line"></span><br><span class="line">    [self myInitWithCoder:aDecode];</span><br><span class="line"></span><br><span class="line">    if (self) &#123;</span><br><span class="line"></span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line"></span><br><span class="line">        if(self.titleLabel.tag != 333)&#123;</span><br><span class="line"></span><br><span class="line">            CGFloat fontSize = self.titleLabel.font.pointSize;</span><br><span class="line"></span><br><span class="line">            self.titleLabel.font = [UIFont systemFontOfSize:MAIN_SCREEN_WIDTH_SCALE*(fontSize)];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return self;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (id)myInitWithFrame:(CGRect)frame</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    [self myInitWithFrame:frame] ;</span><br><span class="line"></span><br><span class="line">    if (self) &#123;</span><br><span class="line"></span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line"></span><br><span class="line">        if(self.titleLabel.tag != 333)&#123;</span><br><span class="line"></span><br><span class="line">            CGFloat fontSize = self.titleLabel.font.pointSize;</span><br><span class="line"></span><br><span class="line">            self.titleLabel.font = [UIFont systemFontOfSize:MAIN_SCREEN_WIDTH_SCALE*(fontSize)];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return self;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@implementation UILabel (myFont)</span><br><span class="line"></span><br><span class="line">+ (void)load&#123;</span><br><span class="line"></span><br><span class="line">    Method imp = class_getInstanceMethod([self class], @selector(initWithCoder:));</span><br><span class="line"></span><br><span class="line">    Method myImp = class_getInstanceMethod([self class], @selector(myInitWithCoder:));</span><br><span class="line"></span><br><span class="line">    method_exchangeImplementations(imp, myImp);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    Method iwf = class_getInstanceMethod([self class], @selector(initWithFrame:));</span><br><span class="line"></span><br><span class="line">    Method myIwf = class_getInstanceMethod([self class], @selector(myInitWithFrame:));</span><br><span class="line"></span><br><span class="line">    method_exchangeImplementations(iwf, myIwf);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)myInitWithCoder:(NSCoder*)aDecode&#123;</span><br><span class="line"></span><br><span class="line">    [self myInitWithCoder:aDecode];</span><br><span class="line"></span><br><span class="line">    if (self) &#123;</span><br><span class="line"></span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line"></span><br><span class="line">        if(self.tag != 333)&#123;</span><br><span class="line"></span><br><span class="line">            CGFloat fontSize = self.font.pointSize;</span><br><span class="line"></span><br><span class="line">            self.font = [UIFont systemFontOfSize:MAIN_SCREEN_WIDTH_SCALE*(fontSize)];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return self;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (id)myInitWithFrame:(CGRect)frame</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    [self myInitWithFrame:frame];</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    if (self) &#123;</span><br><span class="line"></span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line"></span><br><span class="line">        if(self.tag != 333)&#123;</span><br><span class="line"></span><br><span class="line">            CGFloat fontSize = self.font.pointSize;</span><br><span class="line"></span><br><span class="line">            self.font = [UIFont systemFontOfSize:MAIN_SCREEN_WIDTH_SCALE*(fontSize)];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return self;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    例子中我就只实现了<strong>UIButton</strong>和<strong>UILable</strong>两中控件，你可以同样的原理为<strong>UITextFiled</strong>、<strong>UITextView</strong>等控件做出适配，这里我就不一一做示范了，就是这么傲娇☺️。</p><p>​    其实runtime能做的事情很多字体大小适配只是其应用的很小部分，还有很多妙用等着大家挖掘，像<code>无埋点</code>，<code>限制按钮点击次数</code>等N多的用途，总之一句话：用好runtime，走上人生巅峰。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​    前面的文章我已经介绍了Swift中的&lt;strong&gt;Swizzling Method&lt;/strong&gt;，虽然swift语言有很多优
      
    
    </summary>
    
      <category term="Objective-C" scheme="http://yoursite.com/categories/Objective-C/"/>
    
    
      <category term="Swizzling" scheme="http://yoursite.com/tags/Swizzling/"/>
    
  </entry>
  
  <entry>
    <title>Method Swizzling[swift]</title>
    <link href="http://yoursite.com/2018/11/20/Swizzling%5BSwift%5D/"/>
    <id>http://yoursite.com/2018/11/20/Swizzling[Swift]/</id>
    <published>2018-11-20T07:47:18.000Z</published>
    <updated>2018-12-04T14:28:02.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​    在日常开发中，程序员（媛）要面对各种各样的需求，在某些特殊情况下Apple提供的API无法满足我们的需求，这时runtime就派上了用场。</p><h2 id="Swift中被废弃的-load（）和-initialize（）"><a href="#Swift中被废弃的-load（）和-initialize（）" class="headerlink" title="Swift中被废弃的+load（）和+initialize（）"></a>Swift中被废弃的+load（）和+initialize（）</h2><p>我们知道OC中有两个方法<strong><em>+load（）</em></strong>和<strong><em>+initialize（）</em></strong>。</p><p><code>+load()</code>: app启动的时候会加载所有的类,此时就会调用每个类的load方法.<br><code>+initialize()</code>: 第一次初始化这个类的时候会被调用.</p><p>然而在目前的swift版本中这两个方法都不可用了,那现在我们要在这个阶段搞事情该怎么做? 例如<code>method swizzling</code>这个强大的神器，作为为坚强的人类——程序员怎么可能就这样屈服呢。</p><p><a href="http://jordansmith.io/handling-the-deprecation-of-initialize/" target="_blank" rel="noopener">JORDAN SMITH大神</a>给出了一种很巧解决方案.<code>UIApplication</code>有一个<code>next</code>属性,它会在<code>applicationDidFinishLaunching</code>之前被调用,这个时候通过<code>runtime</code>获取到所有类的列表,然后向所有遵循SelfAware协议的类发送消息.</p><h2 id="交换方法Methond-Swizzling"><a href="#交换方法Methond-Swizzling" class="headerlink" title="交换方法Methond Swizzling"></a>交换方法Methond Swizzling</h2><p>黑魔法<code>Method Swizzling</code>在swift中实现的两个要点</p><ul><li>swizzling 应该保证只会执行一次.</li><li>swizzling 应该在加载所有类的时候调用.</li></ul><p>下面给出了两个示例供参考:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">SelfAware</span>: <span class="title">class</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">awake</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">swizzlingForClass</span><span class="params">(<span class="number">_</span> forClass: AnyClass, originalSelector: Selector, swizzledSelector: Selector)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SelfAware</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">swizzlingForClass</span><span class="params">(<span class="number">_</span> forClass: AnyClass, originalSelector: Selector, swizzledSelector: Selector)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> originalMethod = class_getInstanceMethod(forClass, originalSelector)</span><br><span class="line">        <span class="keyword">let</span> swizzledMethod = class_getInstanceMethod(forClass, swizzledSelector)</span><br><span class="line">        <span class="keyword">guard</span> (originalMethod != <span class="literal">nil</span> &amp;&amp; swizzledMethod != <span class="literal">nil</span>) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> class_addMethod(forClass, originalSelector, method_getImplementation(swizzledMethod!), method_getTypeEncoding(swizzledMethod!)) &#123;</span><br><span class="line">            class_replaceMethod(forClass, swizzledSelector, method_getImplementation(originalMethod!), method_getTypeEncoding(originalMethod!))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            method_exchangeImplementations(originalMethod!, swizzledMethod!)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NothingToSeeHere</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">harmlessFunction</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> typeCount = <span class="type">Int</span>(objc_getClassList(<span class="literal">nil</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">let</span> types = <span class="type">UnsafeMutablePointer</span>&lt;<span class="type">AnyClass</span>&gt;.allocate(capacity: typeCount)</span><br><span class="line">        <span class="keyword">let</span> autoreleasingTypes = <span class="type">AutoreleasingUnsafeMutablePointer</span>&lt;<span class="type">AnyClass</span>&gt;(types)</span><br><span class="line">        objc_getClassList(autoreleasingTypes, <span class="type">Int32</span>(typeCount))</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span> ..&lt; typeCount &#123;</span><br><span class="line">            (types[index] <span class="keyword">as</span>? <span class="type">SelfAware</span>.<span class="type">Type</span>)?.awake()</span><br><span class="line">        &#125;</span><br><span class="line">        types.deallocate()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIApplication</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">let</span> runOnce: <span class="type">Void</span> = &#123;</span><br><span class="line">        <span class="type">NothingToSeeHere</span>.harmlessFunction()</span><br><span class="line">    &#125;()</span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">open</span> <span class="keyword">var</span> next: <span class="type">UIResponder</span>? &#123;</span><br><span class="line">        <span class="type">UIApplication</span>.runOnce</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>SelfAware</code>的<code>extension</code>中为<code>swizzlingForClass</code>做了默认实现,相当于一层封装。引自<a href="https://www.jianshu.com/u/25b2d09211e4" target="_blank" rel="noopener">Dariel</a> </p><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p>在之前已经完成了Swizzling的实现，但是我们要学会使用啊，磨好了武器不能留着上锈啊（说干就干）。在平时做项目过程中我们需要对不同屏幕尺寸做出适配，包括<strong><em>字体适配</em></strong>。写一个控件就去适配，费时费力，不会偷懒的程序员不是好程序员（这里的偷懒可不是不做事，而是想办法用最简单的方式实现同样的效果）。</p><p>新建<strong>FontAdapter.swift</strong>文件</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> screenwidthScale = <span class="type">Screen</span>.<span class="type">Width</span>/<span class="number">320.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> screenheightScale = <span class="type">Screen</span>.<span class="type">Height</span>/<span class="number">568.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - 使用运行时实现font大小自适应</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIButton</span>:<span class="title">SelfAware</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">awake</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="type">UIButton</span>.takeOnceTime</span><br><span class="line"></span><br><span class="line">        swizzleMethod</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">let</span> takeOnceTime: <span class="type">Void</span> = &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector = #selector(sendAction)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector = #selector(xxx_sendAction(action:to:forEvent:))</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector, swizzledSelector: swizzledSelector)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">let</span> swizzleMethod:<span class="type">Void</span> = &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector1 = #selector(<span class="type">UIButton</span>.<span class="keyword">init</span>(frame:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector1 = #selector(swizziedInit(frame:))</span><br><span class="line">         <span class="comment">///交换方法</span></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector1, swizzledSelector: swizzledSelector1)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector2 = #selector(<span class="type">UIButton</span>.<span class="keyword">init</span>(coder:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector2 = #selector(swizziedInit(coder:))</span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector2, swizzledSelector: swizzledSelector2)</span><br><span class="line"></span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">xxx_sendAction</span><span class="params">(action: Selector, to: AnyObject!, forEvent: UIEvent!)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">xxx_buttonTapCounter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">var</span> <span class="built_in">count</span>: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        xxx_buttonTapCounter.<span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(xxx_buttonTapCounter.<span class="built_in">count</span>)</span><br><span class="line"></span><br><span class="line">        xxx_sendAction(action: action, to: to, forEvent: forEvent)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(frame:CGRect)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.titleLabel?.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.titleLabel?.font.pointSize</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> fontSize != <span class="literal">nil</span>&#123;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">                <span class="keyword">self</span>.titleLabel?.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize!)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(coder:NSCoder)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(coder: coder)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.titleLabel?.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.titleLabel?.font.pointSize</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> fontSize != <span class="literal">nil</span>&#123;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">                <span class="keyword">self</span>.titleLabel?.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize!)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UILabel</span>:<span class="title">SelfAware</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">awake</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizzleMethod</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">let</span> swizzleMethod:<span class="type">Void</span> = &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector = #selector(<span class="type">UILabel</span>.<span class="keyword">init</span>(frame:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector = #selector(swizziedInit(frame:))</span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector, swizzledSelector: swizzledSelector)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector1 = #selector(<span class="type">UILabel</span>.<span class="keyword">init</span>(coder:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector1 = #selector(swizziedInit(coder:))</span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector1, swizzledSelector: swizzledSelector1)</span><br><span class="line"></span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(frame:CGRect)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.font.pointSize</span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(coder:NSCoder)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(coder: coder)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.font.pointSize</span><br><span class="line"></span><br><span class="line">            <span class="keyword">self</span>.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UITextField</span>:<span class="title">SelfAware</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">awake</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizzleMethod</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">let</span> swizzleMethod:<span class="type">Void</span> = &#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector = #selector(<span class="type">UITextField</span>.<span class="keyword">init</span>(frame:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector = #selector(swizziedInit(frame:))</span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector, swizzledSelector: swizzledSelector)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> originalSelector1 = #selector(<span class="type">UITextField</span>.<span class="keyword">init</span>(coder:))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> swizzledSelector1 = #selector(swizziedInit(coder:))</span><br><span class="line"></span><br><span class="line">        swizzlingForClass(<span class="type">UIButton</span>.<span class="keyword">self</span>, originalSelector: originalSelector1, swizzledSelector: swizzledSelector1)</span><br><span class="line"></span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(frame:CGRect)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.font?.pointSize</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> fontSize != <span class="literal">nil</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">self</span>.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize!)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">swizziedInit</span><span class="params">(coder:NSCoder)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        swizziedInit(coder: coder)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//部分不想改变字体的 把tag值设置成跳过</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>.tag != <span class="number">10000</span>)&#123;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> fontSize = <span class="keyword">self</span>.font?.pointSize</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> fontSize != <span class="literal">nil</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">self</span>.font = <span class="type">UIFont</span>.systemFont(ofSize: screenwidthScale * fontSize!)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>​    到这里已经初步了解了Swizzling 的简单实用，虽然原理并不复杂但是解决了问题，白猫黑猫抓到老鼠就是好猫。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​    在日常开发中，程序员（媛）要面对各种各样的需求，在某些特殊情况下Apple提供的API无法满足我们的需求，这时runtime就派上
      
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swizzling" scheme="http://yoursite.com/tags/Swizzling/"/>
    
  </entry>
  
</feed>
